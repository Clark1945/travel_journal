# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

# Only works with push to master branch
on:
  push:
    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
  build:
    # build with ubuntu env
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew
        working-directory: note_service

      - name: Build with Gradle Wrapper
        run: ./gradlew build
        working-directory: note_service

      - name: List build output
        run: ls -R note_service/build/libs

      - name: Copy jar to root as app.jar
        run: |
          JAR_PATH=$(find note_service/build/libs -name "*.jar" | head -n 1)
          echo "Found JAR: $JAR_PATH"
          if [ -z "$JAR_PATH" ]; then
            echo "‚ùå JAR file not found"
            exit 1
          fi
          cp "$JAR_PATH" app.jar

      # upload to your private repo. username and password is used in Github Secret
      - name: Build and push docker image
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: adrianvonziegler/clark-testing-hub
          registry: docker.io
          tags: latest,${{ github.sha }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      with:
        build-root-directory: note_service
